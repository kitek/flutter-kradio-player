name: Build and release app to testers
on:
  push:
    branches: [ develop ]

jobs:
  build-release-test-android:
    name: Build and release Test Android app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Read version name from file
        id: versionName
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: ./version-name.properties
          property: 'versionName'
      - name: Print app versions
        run: |
          echo "versionName: ${{ steps.versionName.outputs.value }}"
          echo "versionCode: ${GITHUB_RUN_NUMBER}"
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - name: Get packages in a Flutter project
        run: flutter pub get
      - name: Install firebase
        uses: ./.github/actions/install-firebase
        with:
          destination: 'android'
      - name: Restore google-services.json file
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ secrets.ANDROID_GOOGLE_SERVICES_FILE }}
          destination-file: android/app/google-services.json
      - name: Restore android keystore file
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ secrets.ANDROID_KEYSTORE_FILE }}
          destination-file: android/.signing/release.jks
      - name: Build flutter Android APK
        env:
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        run: flutter build apk --build-name=${{ steps.versionName.outputs.value }} --build-number=${GITHUB_RUN_NUMBER}
      - name: Release Android Test App
        uses: maierj/fastlane-action@v1.4.0
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          FIREBASE_APP_ID: ${{ secrets.ANDROID_FIREBASE_APP_ID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        with:
          subdirectory: 'android'
          bundle-install-path: 'vendor/bundle'
          lane: 'releaseTest'

  build-release-test-web:
    name: Build and release Test Web app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Install firebase
        uses: ./.github/actions/install-firebase
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - name: Get packages in a Flutter project
        run: flutter pub get
      - name: Restore firebase.json file
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ secrets.WEB_FIREBASE_JSON }}
          destination-file: firebase.json
      - name: Restore .firebaserc file
        uses: kitek/decode-base64-into-file-action@1.0
        with:
          encoded-value: ${{ secrets.WEB_FIREBASERC_JSON }}
          destination-file: .firebaserc
      - name: Build Test Web app
        shell: bash
        env:
          FLUTTER_WEB: 'true'
        run: flutter build web
      - name: Deploy Test Web app
        shell: bash
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: ./firebase deploy --only hosting:test-app
